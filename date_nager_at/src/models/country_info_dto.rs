/*
 * Nager.Date API - V3
 *
 * Nager.Date is open source software and is completely free for commercial use. If you would like to support the project you can award a GitHub star ‚≠ê or even better <a href='https://github.com/sponsors/nager'>actively support us</a>
 *
 * The version of the OpenAPI document: v3
 * 
 * Generated by: https://openapi-generator.tech
 */

/// CountryInfoDto : CountryInfo Dto



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CountryInfoDto {
    /// CommonName
    #[serde(rename = "commonName", skip_serializing_if = "Option::is_none")]
    pub common_name: Option<String>,
    /// OfficialName
    #[serde(rename = "officialName", skip_serializing_if = "Option::is_none")]
    pub official_name: Option<String>,
    /// CountryCode
    #[serde(rename = "countryCode", skip_serializing_if = "Option::is_none")]
    pub country_code: Option<String>,
    /// Region
    #[serde(rename = "region", skip_serializing_if = "Option::is_none")]
    pub region: Option<String>,
    /// Country Borders
    #[serde(rename = "borders", skip_serializing_if = "Option::is_none")]
    pub borders: Option<Vec<crate::models::CountryInfoDto>>,
}

impl CountryInfoDto {
    /// CountryInfo Dto
    pub fn new() -> CountryInfoDto {
        CountryInfoDto {
            common_name: None,
            official_name: None,
            country_code: None,
            region: None,
            borders: None,
        }
    }
}


