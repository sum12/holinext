/*
 * Nager.Date API - V3
 *
 * Nager.Date is open source software and is completely free for commercial use. If you would like to support the project you can award a GitHub star ‚≠ê or even better <a href='https://github.com/sponsors/nager'>actively support us</a>
 *
 * The version of the OpenAPI document: v3
 * 
 * Generated by: https://openapi-generator.tech
 */


/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PublicHolidayType {
    #[serde(rename = "Public")]
    Public,
    #[serde(rename = "Bank")]
    Bank,
    #[serde(rename = "School")]
    School,
    #[serde(rename = "Authorities")]
    Authorities,
    #[serde(rename = "Optional")]
    Optional,
    #[serde(rename = "Observance")]
    Observance,

}

impl ToString for PublicHolidayType {
    fn to_string(&self) -> String {
        match self {
            Self::Public => String::from("Public"),
            Self::Bank => String::from("Bank"),
            Self::School => String::from("School"),
            Self::Authorities => String::from("Authorities"),
            Self::Optional => String::from("Optional"),
            Self::Observance => String::from("Observance"),
        }
    }
}

impl Default for PublicHolidayType {
    fn default() -> PublicHolidayType {
        Self::Public
    }
}




